@model IEnumerable<HotelReservationApp.Models.Review>
@{
    ViewData["Title"] = "My Reviews";
    Layout = "~/Views/Shared/_HotelManagerLayout.cshtml";
}

<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2">My Reviews</h1>
    <div class="btn-toolbar mb-2 mb-md-0">
        
        <div class="btn-group me-2">
            
            <ul class="dropdown-menu">
                <li><a class="dropdown-item" href="#" onclick="filterByRating('all')">All Ratings</a></li>
                <li><a class="dropdown-item" href="#" onclick="filterByRating('5')">5 Stars</a></li>
                <li><a class="dropdown-item" href="#" onclick="filterByRating('4')">4 Stars</a></li>
                <li><a class="dropdown-item" href="#" onclick="filterByRating('3')">3 Stars</a></li>
                <li><a class="dropdown-item" href="#" onclick="filterByRating('2')">2 Stars</a></li>
                <li><a class="dropdown-item" href="#" onclick="filterByRating('1')">1 Star</a></li>
            </ul>
        </div>
    </div>
</div>

<!-- Statistics Cards -->
<div class="row mb-4">
    <div class="col-xl-3 col-md-6 mb-4">
        <div class="card border-left-primary shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">
                            Total Reviews
                        </div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.Count()</div>
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-star fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-xl-3 col-md-6 mb-4">
        <div class="card border-left-success shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-success text-uppercase mb-1">
                            Average Rating
                        </div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800">
                            @(Model.Any() ? Model.Average(r => r.Rating).ToString("F1") : "0.0")
                        </div>
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-star-half-alt fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-xl-3 col-md-6 mb-4">
        <div class="card border-left-warning shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-warning text-uppercase mb-1">
                            5 Star Reviews
                        </div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.Count(r => r.Rating == 5)</div>
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-star fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-xl-3 col-md-6 mb-4">
        <div class="card border-left-info shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-info text-uppercase mb-1">
                            This Month
                        </div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.Count(r => r.ReviewDate?.Month == DateTime.Now.Month)</div>
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-calendar fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">All Reviews</h6>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-bordered" id="reviewsTable" width="100%" cellspacing="0">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>User</th>
                        <th>Hotel</th>
                        <th>Rating</th>
                        <th>Comment</th>
                        <th>Date</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var review in Model)
                    {
                        <tr data-rating="@review.Rating">
                            <td>@review.ReviewID</td>
                            <td>
                                <strong>@review.User?.FullName</strong><br>
                                <small class="text-muted">@review.User?.Email</small>
                            </td>
                            <td>
                                <strong>@review.Hotel?.Name</strong><br>
                                <small class="text-muted">@review.Hotel?.City?.CityName</small>
                            </td>
                            <td>
                                <div class="d-flex align-items-center">
                                    @for (int i = 1; i <= 5; i++)
                                    {
                                        if (i <= review.Rating)
                                        {
                                            <i class="fas fa-star text-warning"></i>
                                        }
                                        else
                                        {
                                            <i class="far fa-star text-warning"></i>
                                        }
                                    }
                                    <span class="ms-2 badge bg-primary">@review.Rating/5</span>
                                </div>
                            </td>
                            <td>
                                @if (!string.IsNullOrEmpty(review.Comment))
                                {
                                    <div class="text-truncate" style="max-width: 200px;" title="@review.Comment">
                                        @review.Comment
                                    </div>
                                }
                                else
                                {
                                    <span class="text-muted">No comment</span>
                                }
                            </td>
                            <td>@(review.ReviewDate?.ToString("MMM dd, yyyy") ?? "N/A")</td>
                            <td>
                                <div class="btn-group" role="group">
                                    <button type="button" class="btn btn-sm btn-outline-info" 
                                            onclick="viewReview(@review.ReviewID)" title="View Details">
                                        <i class="fas fa-eye"></i>
                                    </button>
                                    <button type="button" class="btn btn-sm btn-outline-danger" 
                                            onclick="deleteReview(@review.ReviewID, '@review.User?.FullName')" title="Delete">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- View Review Modal -->
<div class="modal fade" id="viewReviewModal" tabindex="-1" aria-labelledby="viewReviewModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="viewReviewModalLabel">Review Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="reviewDetails">
                <!-- Review details will be loaded here -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- Delete Review Form -->
<form id="deleteReviewForm" asp-action="DeleteReview" method="post" style="display: none;">
    <input type="hidden" id="deleteReviewId" name="id" />
</form>

@section Scripts {
    <script>
        function deleteReview(reviewId, userName) {
            if (confirm(`Are you sure you want to delete review from "${userName}"?`)) {
                document.getElementById('deleteReviewId').value = reviewId;
                document.getElementById('deleteReviewForm').submit();
            }
        }

        function viewReview(reviewId) {
            // Load review details via AJAX
            fetch(`/HotelManager/GetReviewDetails/${reviewId}`)
                .then(response => response.text())
                .then(html => {
                    document.getElementById('reviewDetails').innerHTML = html;
                    new bootstrap.Modal(document.getElementById('viewReviewModal')).show();
                })
                .catch(error => {
                    console.error('Error loading review details:', error);
                    alert('Error loading review details');
                });
        }

        function generateStars(rating) {
            let stars = '';
            for (let i = 1; i <= 5; i++) {
                if (i <= rating) {
                    stars += '<i class="fas fa-star text-warning"></i>';
                } else {
                    stars += '<i class="far fa-star text-warning"></i>';
                }
            }
            return stars;
        }

        function filterByRating(rating) {
            const rows = document.querySelectorAll('#reviewsTable tbody tr');
            rows.forEach(row => {
                if (rating === 'all' || row.dataset.rating === rating) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            });
        }

        function exportTable() {
            const table = document.getElementById('reviewsTable');
            const html = table.outerHTML;
            const url = 'data:application/vnd.ms-excel,' + encodeURIComponent(html);
            const downloadLink = document.createElement("a");
            document.body.appendChild(downloadLink);
            downloadLink.href = url;
            downloadLink.download = 'my-reviews.xls';
            downloadLink.click();
            document.body.removeChild(downloadLink);
        }

        $(document).ready(function() {
            if ($.fn.DataTable) {
                $('#reviewsTable').DataTable({
                    "order": [[0, "desc"]],
                    "pageLength": 25
                });
            }
        });
    </script>
}